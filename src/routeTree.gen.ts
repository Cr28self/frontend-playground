/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ReducerImport } from './routes/reducer'
import { Route as FigmaImport } from './routes/figma'
import { Route as BuilderDemoImport } from './routes/builder-demo'

// Create Virtual Routes

const ReviewLazyImport = createFileRoute('/review')()
const LoginLazyImport = createFileRoute('/login')()
const ContextLazyImport = createFileRoute('/context')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const AuthRegisterLazyImport = createFileRoute('/auth/register')()
const AuthLoginLazyImport = createFileRoute('/auth/login')()

// Create/Update Routes

const ReviewLazyRoute = ReviewLazyImport.update({
  path: '/review',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/review.lazy').then((d) => d.Route))

const LoginLazyRoute = LoginLazyImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login.lazy').then((d) => d.Route))

const ContextLazyRoute = ContextLazyImport.update({
  path: '/context',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/context.lazy').then((d) => d.Route))

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const ReducerRoute = ReducerImport.update({
  path: '/reducer',
  getParentRoute: () => rootRoute,
} as any)

const FigmaRoute = FigmaImport.update({
  path: '/figma',
  getParentRoute: () => rootRoute,
} as any)

const BuilderDemoRoute = BuilderDemoImport.update({
  path: '/builder-demo',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AuthRegisterLazyRoute = AuthRegisterLazyImport.update({
  path: '/auth/register',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/register.lazy').then((d) => d.Route))

const AuthLoginLazyRoute = AuthLoginLazyImport.update({
  path: '/auth/login',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/login.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/builder-demo': {
      id: '/builder-demo'
      path: '/builder-demo'
      fullPath: '/builder-demo'
      preLoaderRoute: typeof BuilderDemoImport
      parentRoute: typeof rootRoute
    }
    '/figma': {
      id: '/figma'
      path: '/figma'
      fullPath: '/figma'
      preLoaderRoute: typeof FigmaImport
      parentRoute: typeof rootRoute
    }
    '/reducer': {
      id: '/reducer'
      path: '/reducer'
      fullPath: '/reducer'
      preLoaderRoute: typeof ReducerImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/context': {
      id: '/context'
      path: '/context'
      fullPath: '/context'
      preLoaderRoute: typeof ContextLazyImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/review': {
      id: '/review'
      path: '/review'
      fullPath: '/review'
      preLoaderRoute: typeof ReviewLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/auth/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  BuilderDemoRoute,
  FigmaRoute,
  ReducerRoute,
  AboutLazyRoute,
  ContextLazyRoute,
  LoginLazyRoute,
  ReviewLazyRoute,
  AuthLoginLazyRoute,
  AuthRegisterLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/builder-demo",
        "/figma",
        "/reducer",
        "/about",
        "/context",
        "/login",
        "/review",
        "/auth/login",
        "/auth/register"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/builder-demo": {
      "filePath": "builder-demo.tsx"
    },
    "/figma": {
      "filePath": "figma.tsx"
    },
    "/reducer": {
      "filePath": "reducer.tsx"
    },
    "/about": {
      "filePath": "about.lazy.tsx"
    },
    "/context": {
      "filePath": "context.lazy.tsx"
    },
    "/login": {
      "filePath": "login.lazy.tsx"
    },
    "/review": {
      "filePath": "review.lazy.tsx"
    },
    "/auth/login": {
      "filePath": "auth/login.lazy.tsx"
    },
    "/auth/register": {
      "filePath": "auth/register.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
